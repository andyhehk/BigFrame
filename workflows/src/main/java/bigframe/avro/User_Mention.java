/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package bigframe.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class User_Mention extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"User_Mention\",\"namespace\":\"bigframe.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"]},{\"name\":\"id_str\",\"type\":[\"null\",\"string\"]},{\"name\":\"indices\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}]},{\"name\":\"name\",\"type\":[\"null\",\"string\"]},{\"name\":\"screen_name\",\"type\":[\"null\",\"string\"]}]}");
  @Deprecated public java.lang.Long id;
  @Deprecated public java.lang.CharSequence id_str;
  @Deprecated public java.util.List<java.lang.Integer> indices;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence screen_name;

  /**
   * Default constructor.
   */
  public User_Mention() {}

  /**
   * All-args constructor.
   */
  public User_Mention(java.lang.Long id, java.lang.CharSequence id_str, java.util.List<java.lang.Integer> indices, java.lang.CharSequence name, java.lang.CharSequence screen_name) {
    this.id = id;
    this.id_str = id_str;
    this.indices = indices;
    this.name = name;
    this.screen_name = screen_name;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return id_str;
    case 2: return indices;
    case 3: return name;
    case 4: return screen_name;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: id_str = (java.lang.CharSequence)value$; break;
    case 2: indices = (java.util.List<java.lang.Integer>)value$; break;
    case 3: name = (java.lang.CharSequence)value$; break;
    case 4: screen_name = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'id_str' field.
   */
  public java.lang.CharSequence getIdStr() {
    return id_str;
  }

  /**
   * Sets the value of the 'id_str' field.
   * @param value the value to set.
   */
  public void setIdStr(java.lang.CharSequence value) {
    this.id_str = value;
  }

  /**
   * Gets the value of the 'indices' field.
   */
  public java.util.List<java.lang.Integer> getIndices() {
    return indices;
  }

  /**
   * Sets the value of the 'indices' field.
   * @param value the value to set.
   */
  public void setIndices(java.util.List<java.lang.Integer> value) {
    this.indices = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'screen_name' field.
   */
  public java.lang.CharSequence getScreenName() {
    return screen_name;
  }

  /**
   * Sets the value of the 'screen_name' field.
   * @param value the value to set.
   */
  public void setScreenName(java.lang.CharSequence value) {
    this.screen_name = value;
  }

  /** Creates a new User_Mention RecordBuilder */
  public static bigframe.avro.User_Mention.Builder newBuilder() {
    return new bigframe.avro.User_Mention.Builder();
  }
  
  /** Creates a new User_Mention RecordBuilder by copying an existing Builder */
  public static bigframe.avro.User_Mention.Builder newBuilder(bigframe.avro.User_Mention.Builder other) {
    return new bigframe.avro.User_Mention.Builder(other);
  }
  
  /** Creates a new User_Mention RecordBuilder by copying an existing User_Mention instance */
  public static bigframe.avro.User_Mention.Builder newBuilder(bigframe.avro.User_Mention other) {
    return new bigframe.avro.User_Mention.Builder(other);
  }
  
  /**
   * RecordBuilder for User_Mention instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<User_Mention>
    implements org.apache.avro.data.RecordBuilder<User_Mention> {

    private java.lang.Long id;
    private java.lang.CharSequence id_str;
    private java.util.List<java.lang.Integer> indices;
    private java.lang.CharSequence name;
    private java.lang.CharSequence screen_name;

    /** Creates a new Builder */
    private Builder() {
      super(bigframe.avro.User_Mention.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(bigframe.avro.User_Mention.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing User_Mention instance */
    private Builder(bigframe.avro.User_Mention other) {
            super(bigframe.avro.User_Mention.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id_str)) {
        this.id_str = data().deepCopy(fields()[1].schema(), other.id_str);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.indices)) {
        this.indices = data().deepCopy(fields()[2].schema(), other.indices);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.screen_name)) {
        this.screen_name = data().deepCopy(fields()[4].schema(), other.screen_name);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Long getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public bigframe.avro.User_Mention.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public bigframe.avro.User_Mention.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'id_str' field */
    public java.lang.CharSequence getIdStr() {
      return id_str;
    }
    
    /** Sets the value of the 'id_str' field */
    public bigframe.avro.User_Mention.Builder setIdStr(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id_str = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'id_str' field has been set */
    public boolean hasIdStr() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'id_str' field */
    public bigframe.avro.User_Mention.Builder clearIdStr() {
      id_str = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'indices' field */
    public java.util.List<java.lang.Integer> getIndices() {
      return indices;
    }
    
    /** Sets the value of the 'indices' field */
    public bigframe.avro.User_Mention.Builder setIndices(java.util.List<java.lang.Integer> value) {
      validate(fields()[2], value);
      this.indices = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'indices' field has been set */
    public boolean hasIndices() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'indices' field */
    public bigframe.avro.User_Mention.Builder clearIndices() {
      indices = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public bigframe.avro.User_Mention.Builder setName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.name = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'name' field */
    public bigframe.avro.User_Mention.Builder clearName() {
      name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'screen_name' field */
    public java.lang.CharSequence getScreenName() {
      return screen_name;
    }
    
    /** Sets the value of the 'screen_name' field */
    public bigframe.avro.User_Mention.Builder setScreenName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.screen_name = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'screen_name' field has been set */
    public boolean hasScreenName() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'screen_name' field */
    public bigframe.avro.User_Mention.Builder clearScreenName() {
      screen_name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public User_Mention build() {
      try {
        User_Mention record = new User_Mention();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.id_str = fieldSetFlags()[1] ? this.id_str : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.indices = fieldSetFlags()[2] ? this.indices : (java.util.List<java.lang.Integer>) defaultValue(fields()[2]);
        record.name = fieldSetFlags()[3] ? this.name : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.screen_name = fieldSetFlags()[4] ? this.screen_name : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
