#!/usr/bin/env bash

###################################################################
# The Datagen command script
#
#
# The user should not need to modify this script. All user-defined
# parameters can be set in 'conf/config.sh'.
#
# Author: Andy He
# Date:   Jun 17, 2013
###################################################################


# Perform common tasks like Load configurations and initializations
bin=`dirname "$0"`
. "$bin"/common.sh

# Get the bigframe base dir
OLD_PATH=$PWD
cd $bin
cd ..
BASE_PATH=$PWD
cd $OLD_PATH

QGEN_CLASSPATH=$QGEN_JAR
QGEN_CLASSPATH+=:$WORKFLOWS_JAR

#if [ -n "$HADOOP_HOME" ]; then
#	for jar in `ls $HADOOP_HOME/*.jar`; do
#		QGEN_CLASSPATH+=:$jar
#	done
#
#	for jar in `find $HADOOP_HOME/lib -name '*.jar'`; do
#		QGEN_CLASSPATH+=:$jar
#	done
#
	QGEN_CLASSPATH+=:$HADOOP_HOME/conf
#fi


#if [ -n "$HIVE_HOME" ]; then
#	for jar in `find $HIVE_HOME/lib -name '*.jar'`; do
#		QGEN_CLASSPATH+=:$jar
#	done
#fi

#if [ -n "$VERTICA_HOME" ]; then
#	for jar in `find $VERTICA_HOME/java/lib -name '*.jar'`; do
#		QGEN_CLASSPATH+=:$jar
#	done
#fi

#if [ -n "$SPARK_HOME" ]; then
##	for jar in `find $SPARK_HOME/assembly/target/$SPARK_SCALA_VERSION -name 'spark*.jar'`; do
##		QGEN_CLASSPATH+=:$jar
##	done
#
#	for jar in `find $SPARK_HOME/lib_managed/jars -name '*.jar'`; do
#		QGEN_CLASSPATH+=:$jar
#	done
#	
#	for jar in `find $SPARK_HOME/lib_managed/bundles -name '*.jar'`; do
#		QGEN_CLASSPATH+=:$jar
#	done
#	
#fi

for jar in `find $BASE_PATH/qgen/lib_managed -name '*.jar'`; do
	QGEN_CLASSPATH+=:$jar
done

for jar in `find $BASE_PATH/lib_managed/jars -name '*.jar'`; do
	if [ -n "$IMPALA_HOME" ]; then
	# Ignore the lib libthrift since it has already been included with in qgen/lib_managed.
	# To avoid possible version conflict
		if [[ "$jar" != *libthrift* ]]; then
			QGEN_CLASSPATH+=:$jar
		fi 
		
		if [[ "$jar" != hive* ]]; then
			QGEN_CLASSPATH+=:$jar
		fi 

	else
		QGEN_CLASSPATH+=:$jar
	fi
done

for jar in `find $BASE_PATH/lib_managed/bundles -name '*.jar'`; do
	QGEN_CLASSPATH+=:$jar
done



if [ -n "$SHARK_HOME" ]; then
#	for jar in `find $SHARK_HOME/target/$SPARK_SCALA_VERSION -name 'shark*.jar'`; do
#		QGEN_CLASSPATH+=:$jar
#	done

	source $SHARK_HOME/conf/shark-env.sh

	for jar in `find $HIVE_HOME/lib -name '*.jar'`; do
		# Ignore the logging library since it has already been included with the Spark jar.
		if [[ "$jar" != *slf4j* ]]; then
			QGEN_CLASSPATH+=:$jar
		fi  
	done

	export CLASSPATH=$QGEN_CLASSPATH
	export SPARK_CLASSPATH=$QGEN_CLASSPATH

fi


java -cp "$QGEN_CLASSPATH" -XX:MaxPermSize=128M bigframe.qgen.QGenDriver $BIGFRAME_OPTS "$@" 

