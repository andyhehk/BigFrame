#!/usr/bin/env bash

###################################################################
# The Datagen command script
#
#
# The user should not need to modify this script. All user-defined
# parameters can be set in 'conf/config.sh'.
#
# Author: Andy He
# Date:   Jun 17, 2013
###################################################################


# Perform common tasks like Load configurations and initializations
bin=`dirname "$0"`
. "$bin"/common.sh

# Get the bigframe base dir
OLD_PATH=$PWD
cd $bin
cd ..
BASE_PATH=$PWD
cd $OLD_PATH

QGEN_CLASSPATH=$QGEN_JAR
QGEN_CLASSPATH+=:$WORKFLOWS_JAR

QGEN_CLASSPATH+=:$HADOOP_HOME/conf


for jar in `find $BASE_PATH/lib_managed -name '*.jar'`; do
	if [ "$IMPALA_IN_USE" = true ]; then
	# Ignore the lib libthrift since it has already been included with in qgen/lib_managed.
	# To avoid possible version conflict
		if [[ "$jar" != *libthrift* && "$jar" != *hive* ]]; then
			QGEN_CLASSPATH+=:$jar
		fi 
		
	elif [ "$SHARK_IN_USE" = true ]; then
		# ignore this for shark since it uses bundled Hive 0.9.0
		if [[ "$jar" != *hive* && "$jar" != *antlr* && "$jar" != *libthrift-0.9.0.jar && "$jar" != *datanucleus* && "$jar" != *jackson-databind* ]]; then
			QGEN_CLASSPATH+=:$jar
		fi 
	else
		QGEN_CLASSPATH+=:$jar
	fi
done

if [ "$VERTICA_IN_USE" = true ]; then
	for jar in `find $BASE_PATH/workflows/lib_vertica -name '*.jar'`; do
		QGEN_CLASSPATH+=:$jar
	done
fi


if [ "$IMPALA_IN_USE" = true ]; then
	if [ -n "$IMPALA_HOME" ]; then
		for jar in `find $IMPALA/lib -name '*.jar'`; do
			QGEN_CLASSPATH+=:$jar
		done
	else
		echo "IMPALA_HOME is not set!"
		exit
	fi
fi

if [ "$HIVE_IN_USE" = true ]; then
	if [ -n "$HIVE_HOME" ]; then
		for jar in `find $HIVE_HOME/lib -name '*.jar'`; do
			QGEN_CLASSPATH+=:$jar
		done
	else
		echo "HIVE_HOME is not set!"
		exit
	fi
fi

if [ "$SHARK_IN_USE" = true ]; then
	if [ -n "$SHARK_HOME" ]; then
		source $SHARK_HOME/conf/shark-env.sh

		for jar in `find $HIVE_HOME/lib -name '*.jar'`; do
		# Ignore the logging library since it has already been included with the Spark jar.
			if [[ "$jar" != *slf4j* ]]; then
				QGEN_CLASSPATH+=:$jar
			fi  
		done
	else
		echo "SHARK_HOME is not set!"
		exit
	fi

	if [ -n "$SPARK_HOME" ]; then
		for jar in `find $SPARK_HOME/lib_managed -name '*.jar'`; do
			QGEN_CLASSPATH+=:$jar
		done
	else
		echo "SPARK_HOME is not set!"
		exit
	fi
	
	export CLASSPATH=$QGEN_CLASSPATH
	export SPARK_CLASSPATH=$QGEN_CLASSPATH

fi

java -cp "$QGEN_CLASSPATH" -XX:MaxPermSize=128M bigframe.qgen.QGenDriver $BIGFRAME_OPTS "$@" 

